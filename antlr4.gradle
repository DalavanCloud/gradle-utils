import java.nio.file.Paths;
import org.gradle.api.tasks.JavaExec;

ext.antlr4 = [
    antlrSource: 'src/main/antlr4',
    destinationDir: "src/generated-sources/antlr4"
]

task antlr4OutputDir << {
	mkdir(antlr4.destinationDir)
}

task antlr4Task(dependsOn: antlr4OutputDir) {
	description = 'Generates Java sources from Antlr4 grammars.'

	inputs.dir file(antlr4.antlrSource)
	outputs.dir file(antlr4.destinationDir)

	def grammars = fileTree(antlr4.antlrSource).include('**/*.g4')

	grammars.files.each {File grammarFile ->
		java.nio.file.Path grammar = Paths.get(grammarFile.absolutePath)
		java.nio.file.Path base = Paths.get(new File(antlr4.antlrSource).absolutePath)
		java.nio.file.Path relPath = base.relativize(grammar)
		File relFile = relPath.toFile()
		String pkgDir = relFile.getParentFile()
		String pkg = pkgDir.toString().replace(File.separator, '.')
		
		doLast {
			javaexec {
				main = 'org.antlr.v4.Tool'
				classpath = configurations.compile
				
				args = ["-o", "${antlr4.destinationDir}/${pkgDir}", grammarFile].flatten()
			}
		}
	}	
}

compileJava.dependsOn antlr4Task
sourceSets.main.java.srcDirs += antlr4.destinationDir

